{
  "version": 3,
  "sources": ["../../src/HashRouter.js", "../../node_modules/@techexp/jshelper/dist/helper-esm.js", "../../src/utils/RouterUtils.js", "../../src/utils/Route.js"],
  "sourcesContent": ["import {Stringer} from '@techexp/jshelper'\nimport {cleanPath, getHashPath} from './utils/RouterUtils'\nimport {Route} from './utils/Route'\n\nexport function createRouter() {\n  return new HashRouter()\n}\n\nclass HashRouter {\n  constructor() {\n    this.routes = []\n\n    const hashHandler = ev => hashChangeHandler(ev, this.routes)\n    const loadHandler = ev => hashChangeHandler(ev, this.routes, true)\n\n    window.addEventListener('hashchange', hashHandler, false)\n    window.addEventListener('load', loadHandler, false)\n  }\n\n  add(path, handler) {\n    this.routes.push({route: new Route(path), handler})\n  }\n\n  go(hashPath) {\n    hashPath = '#' + cleanPath(hashPath)\n    const base = Stringer.substringBefore(window.location.href, '#')\n    const href = base + hashPath\n    window.history.pushState(null, null, hashPath)\n    window.location.href = href\n  }\n}\n\n\nfunction hashChangeHandler(ev, routes, isLoad = false) {\n  const newPath = getNewPath(ev, isLoad)\n  if (newPath === undefined) return\n\n  const params = {}\n  const handler = findHandler(routes, newPath, params)\n  if (handler) {\n    handler(newPath, params)\n  }\n}\n\nfunction getNewPath(ev, isLoad) {\n  if (isLoad) {\n    return getHashPath(ev.target.location.href)\n  }\n  const oldPath = getHashPath(ev.oldURL)\n  const newPath = getHashPath(ev.newURL)\n\n  return oldPath === newPath ? undefined : newPath\n}\n\nfunction findHandler(routes, path, params) {\n  const found = routes.find(r => r.route.isMatch(path, params))\n  return found ? found.handler : false\n}\n", "// Halper.js Common ES/JS utility library\n// https://github.com/ahabra/js-helper\n// Copyright 2022 (C) Abdul Habra. Version 0.6.0.\n// Apache License Version 2.0\n\n\nvar __defProp = Object.defineProperty;\nvar __export = (target, all2) => {\n  for (var name in all2)\n    __defProp(target, name, { get: all2[name], enumerable: true });\n};\n\n// src/utils/Domer.js\nvar Domer_exports = {};\n__export(Domer_exports, {\n  add: () => add,\n  all: () => all,\n  classPresentIf: () => classPresentIf,\n  createElement: () => createElement,\n  createElements: () => createElements,\n  first: () => first,\n  getAttributes: () => getAttributes,\n  id: () => id,\n  removeElements: () => removeElements,\n  setContent: () => setContent,\n  tag: () => tag\n});\n\n// src/utils/Objecter.js\nvar Objecter_exports = {};\n__export(Objecter_exports, {\n  equals: () => equals,\n  forEachEntry: () => forEachEntry,\n  has: () => has,\n  isDate: () => isDate,\n  isFunction: () => isFunction,\n  isInteger: () => isInteger,\n  isNil: () => isNil,\n  isNumber: () => isNumber,\n  isRegExp: () => isRegExp,\n  isString: () => isString\n});\nfunction isNil(x) {\n  return x === null || x === void 0;\n}\nfunction isString(s) {\n  return isType(s, \"String\");\n}\nfunction isFunction(f) {\n  return isType(f, \"Function\");\n}\nfunction isDate(d) {\n  return isType(d, \"Date\");\n}\nfunction isNumber(n) {\n  if (isType(n, \"Number\")) {\n    if (Number.isNaN(n))\n      return false;\n    return Number.isFinite(n);\n  }\n  if (!isString(n))\n    return false;\n  n = n.trim();\n  if (n === \"\")\n    return false;\n  return !isNaN(n);\n}\nfunction isInteger(n) {\n  if (!isNumber(n))\n    return false;\n  return Number.isInteger(Number.parseFloat(n));\n}\nfunction isRegExp(re) {\n  return isType(re, \"RegExp\");\n}\nfunction isType(v, type) {\n  return Object.prototype.toString.call(v) === `[object ${type}]`;\n}\nfunction forEachEntry(object, func) {\n  if (!object || !func)\n    return;\n  if (Array.isArray(object)) {\n    object.forEach((v, index) => {\n      func(index, v);\n    });\n    return;\n  }\n  Object.entries(object).forEach((p) => func(p[0], p[1]));\n}\nfunction has(object, propName) {\n  if (!object || !propName)\n    return false;\n  return Object.prototype.hasOwnProperty.call(object, propName);\n}\nfunction equals(a, b) {\n  if (a === b)\n    return true;\n  if (a === void 0 || b === void 0)\n    return false;\n  return isEqual(a, b);\n}\nfunction isEqual(a, b) {\n  if (isSimpleType(a) || isSimpleType(b))\n    return a === b;\n  return isEqualCompoundType(a, b);\n}\nvar simpleTypes = /* @__PURE__ */ new Set([\"boolean\", \"number\", \"bigint\", \"string\", \"symbol\"]);\nfunction isSimpleType(v) {\n  return simpleTypes.has(typeof v);\n}\nfunction isEqualCompoundType(a, b) {\n  if (!isEqualType(a, b))\n    return false;\n  if (isEqualDates(a, b))\n    return true;\n  return isEqualObjects(a, b);\n}\nfunction isEqualType(a, b) {\n  return prototypeToString(a) === prototypeToString(b);\n}\nfunction prototypeToString(v) {\n  return Object.prototype.toString.call(v);\n}\nfunction isEqualDates(a, b) {\n  if (isDate(a) && isDate(b)) {\n    return a.getTime() === b.getTime();\n  }\n  return false;\n}\nfunction isEqualObjects(a, b) {\n  const akeys = Object.keys(a);\n  if (akeys.length !== Object.keys(b).length)\n    return false;\n  return akeys.every((k) => equals(a[k], b[k]));\n}\n\n// src/utils/Domer.js\nfunction id(elementId, root = document) {\n  if (isWebComponent(root)) {\n    root = root.shadowRoot;\n  }\n  return root.getElementById(elementId);\n}\nfunction all(selector, root = document) {\n  if (isWebComponent(root)) {\n    root = root.shadowRoot;\n  }\n  return Array.from(root.querySelectorAll(selector));\n}\nfunction first(selector, root = document) {\n  if (isWebComponent(root)) {\n    root = root.shadowRoot;\n  }\n  if (!selector.includes(\"/\")) {\n    return root.querySelector(selector);\n  }\n  const path = selector.split(\"/\").map((p) => p.trim()).filter((p) => p.length > 0);\n  for (const p of path) {\n    root = nextChild(p, root);\n    if (root === null)\n      break;\n  }\n  return root;\n}\nfunction nextChild(pathItem, root) {\n  const isShadowRoot = pathItem === \"shadowRoot\" || pathItem === \"shadow-root\";\n  return isShadowRoot ? root.shadowRoot : root.querySelector(pathItem);\n}\nfunction isWebComponent(el) {\n  return el && el.shadowRoot && el.tagName.includes(\"-\");\n}\nfunction getAttributes(el) {\n  const result = {};\n  const atts = el.attributes;\n  if (!atts || atts.length === 0)\n    return result;\n  for (let i = 0; i < atts.length; i++) {\n    const a = atts[i];\n    result[a.name] = a.value;\n  }\n  return result;\n}\nfunction createElements(html = \"\") {\n  html = html.trim();\n  if (!html)\n    return [];\n  const temp = document.createElement(\"template\");\n  temp.innerHTML = html;\n  return Array.from(temp.content.childNodes);\n}\nfunction createElement(name, attributes = {}, content = \"\") {\n  const html = tag(name, attributes, content);\n  const elements = createElements(html);\n  if (elements.length === 0)\n    return null;\n  return elements[0];\n}\nfunction tag(name, attributes = {}, content = \"\") {\n  if (!name)\n    return \"\";\n  const atts = attsToString(attributes);\n  return `<${name}${atts}>${content}</${name}>`;\n}\nfunction attsToString(attributes) {\n  const array = [];\n  forEachEntry(attributes, (k, v) => {\n    array.push(`${k}=\"${v}\"`);\n  });\n  const sep = array.length > 0 ? \" \" : \"\";\n  return sep + array.join(\" \");\n}\nvar LOCATIONS = /* @__PURE__ */ new Set([\"beforebegin\", \"afterbegin\", \"beforeend\", \"afterend\"]);\nfunction add(target, tobeAdded, location = \"beforeend\") {\n  location = location.toLowerCase();\n  if (!LOCATIONS.has(location))\n    return false;\n  if (isString(tobeAdded)) {\n    target.insertAdjacentHTML(location, tobeAdded);\n  } else {\n    addElements(target, tobeAdded, location);\n  }\n  return true;\n}\nfunction addElements(target, tobeAdded, location) {\n  if (Array.isArray(tobeAdded)) {\n    tobeAdded.forEach((el) => target.insertAdjacentElement(location, el));\n  } else {\n    target.insertAdjacentElement(location, tobeAdded);\n  }\n}\nfunction setContent(element, ...content) {\n  element.innerHTML = \"\";\n  element.append(...content);\n}\nfunction removeElements(selector, root = document) {\n  const elements = all(selector, root);\n  elements.forEach((el) => {\n    el.parentNode.removeChild(el);\n  });\n}\nfunction classPresentIf(el, cssClass, condition) {\n  if (!el)\n    return;\n  const func = condition ? \"add\" : \"remove\";\n  el.classList[func](cssClass);\n}\n\n// src/utils/Stringer.js\nvar Stringer_exports = {};\n__export(Stringer_exports, {\n  endsWith: () => endsWith,\n  indexOf: () => indexOf,\n  indexOfFirstMatch: () => indexOfFirstMatch,\n  indexOfLastMatch: () => indexOfLastMatch,\n  isEmpty: () => isEmpty,\n  removePrefix: () => removePrefix,\n  removeSuffix: () => removeSuffix,\n  removeSurrounding: () => removeSurrounding,\n  replaceAll: () => replaceAll,\n  replaceTemplate: () => replaceTemplate,\n  startsWith: () => startsWith,\n  strip: () => strip,\n  stripEnd: () => stripEnd,\n  stripStart: () => stripStart,\n  substringAfter: () => substringAfter,\n  substringBefore: () => substringBefore,\n  trim: () => trim\n});\nfunction indexOf(st, search, fromIndex = 0, ignoreCase = false) {\n  if (!st)\n    return -1;\n  if (ignoreCase) {\n    return st.toLowerCase().indexOf(search.toLowerCase(), fromIndex);\n  }\n  return st.indexOf(search, fromIndex);\n}\nfunction indexOfFirstMatch(st, callback) {\n  if (!callback || !st)\n    return -1;\n  return st.split(\"\").findIndex(callback);\n}\nfunction indexOfLastMatch(st, callback) {\n  if (!callback || !st)\n    return -1;\n  const chars = st.split(\"\");\n  for (let i = chars.length; i >= 0; --i) {\n    if (callback(chars[i], i))\n      return i;\n  }\n  return -1;\n}\nfunction startsWith(st = \"\", search = void 0, ignoreCase = false) {\n  if (ignoreCase) {\n    const start = st.substring(0, search.length).toLowerCase();\n    return search.toLowerCase() === start;\n  }\n  return st.startsWith(search);\n}\nfunction endsWith(st, search, ignoreCase = false) {\n  if (ignoreCase) {\n    return st.toLowerCase().endsWith(search.toLowerCase());\n  }\n  return st.endsWith(search);\n}\nfunction removePrefix(st, prefix, ignoreCase = false) {\n  if (startsWith(st, prefix, ignoreCase)) {\n    st = st.substring(prefix.length);\n  }\n  return st;\n}\nfunction removeSuffix(st, suffix, ignoreCase = false) {\n  if (endsWith(st, suffix, ignoreCase)) {\n    st = st.substring(0, st.length - suffix.length);\n  }\n  return st;\n}\nfunction removeSurrounding(st, prefix, suffix, ignoreCase = false) {\n  return removeSuffix(removePrefix(st, prefix, ignoreCase), suffix, ignoreCase);\n}\nfunction substringAfter(st, search, ignoreCase = false) {\n  if (!search) {\n    return st;\n  }\n  const i = indexOf(st, search, 0, ignoreCase);\n  if (i < 0)\n    return \"\";\n  return st.substring(i + search.length);\n}\nfunction substringBefore(st, search, ignoreCase = false) {\n  if (!search) {\n    return \"\";\n  }\n  const i = indexOf(st, search, 0, ignoreCase);\n  if (i < 0)\n    return st;\n  return st.substring(0, i);\n}\nfunction trim(s) {\n  if (isEmpty(s))\n    return \"\";\n  if (!isString(s)) {\n    s = String(s);\n  }\n  return s.trim(s);\n}\nfunction isEmpty(s) {\n  return s === void 0 || s === null || s === \"\";\n}\nfunction replaceAll(text, search, newStr) {\n  if (isFunction(String.prototype.replaceAll)) {\n    return text.replaceAll(search, newStr);\n  }\n  if (isRegExp(search)) {\n    return text.replace(search, newStr);\n  }\n  const re = new RegExp(search, \"g\");\n  return text.replace(re, newStr);\n}\nfunction replaceTemplate(text = \"\", values = {}, preTag = \"${\", postTag = \"}\") {\n  forEachEntry(values, (k, v) => {\n    if (v !== void 0) {\n      k = preTag + k + postTag;\n      text = replaceAll(text, k, v);\n    }\n  });\n  return text;\n}\nfunction stripStart(s, stripChars = \"\") {\n  if (isEmpty(s))\n    return \"\";\n  if (!stripChars)\n    return s;\n  return stripStart_(s, new Set(Array.from(stripChars)));\n}\nfunction stripStart_(s, stripSet) {\n  for (let i = 0; i < s.length; i++) {\n    if (!stripSet.has(s.charAt(i))) {\n      return s.substring(i);\n    }\n  }\n  return \"\";\n}\nfunction stripEnd(s, stripChars = \"\") {\n  if (isEmpty(s))\n    return \"\";\n  if (!stripChars)\n    return s;\n  return stripEnd_(s, new Set(Array.from(stripChars)));\n}\nfunction stripEnd_(s, stripSet) {\n  for (let i = s.length - 1; i >= 0; i--) {\n    if (!stripSet.has(s.charAt(i))) {\n      return s.substring(0, i + 1);\n    }\n  }\n  return \"\";\n}\nfunction strip(s, stripChars = \"\") {\n  if (s === void 0 || s === \"\")\n    return \"\";\n  if (!stripChars)\n    return s;\n  const stripSet = new Set(Array.from(stripChars));\n  s = stripStart_(s, stripSet);\n  if (!s)\n    return \"\";\n  return stripEnd_(s, stripSet);\n}\n\n// src/utils/LineCompare.js\nvar LineCompare_exports = {};\n__export(LineCompare_exports, {\n  compareLines: () => compareLines\n});\nfunction compareLines(t1, t2, { trim: trim2 = true, skipEmpty = true, caseSensitive = true } = { trim: true, skipEmpty: true, caseSensitive: true }) {\n  t1 = toLines(t1, { trim: trim2, skipEmpty });\n  t2 = toLines(t2, { trim: trim2, skipEmpty });\n  if (t1.length !== t2.length) {\n    return `t1 has ${t1.length} lines(s) while t2 has ${t2.length} line(s).`;\n  }\n  for (let i = 0; i < t1.length; i++) {\n    const result = compareTwoLines(t1[i], t2[i], i, caseSensitive);\n    if (result.length > 0) {\n      return result;\n    }\n  }\n  return \"\";\n}\nfunction compareTwoLines(t1, t2, index, caseSensitive) {\n  const a = caseSensitive ? t1 : t1.toLowerCase();\n  const b = caseSensitive ? t2 : t2.toLowerCase();\n  if (a !== b) {\n    return `Line #${index + 1} mismatch.\n${t1}\n${t2}`;\n  }\n  return \"\";\n}\nfunction toLines(t, { trim: trim2, skipEmpty }) {\n  if (trim2) {\n    t = trim(t);\n  }\n  t = t.split(\"\\n\");\n  if (trim2) {\n    t = t.map((ln) => trim(ln));\n  }\n  if (skipEmpty) {\n    t = t.filter((ln) => !!ln);\n  }\n  return t;\n}\nexport {\n  Domer_exports as Domer,\n  LineCompare_exports as LineCompare,\n  Objecter_exports as Objecter,\n  Stringer_exports as Stringer\n};\n", "import {Stringer} from '@techexp/jshelper'\n\nexport function getHashPath(href) {\n  href = Stringer.substringAfter(href, '#')\n  return cleanPath(href)\n}\n\nexport function cleanPath(path) {\n  return Stringer.strip(path, ' /#')\n}", "import {cleanPath} from './RouterUtils'\n\nexport class Route {\n  constructor(path) {\n    this.parts = parsePath(path)\n  }\n\n  /**\n   * Check if given path matches this route\n   * @param {String} path\n   * @param {Object, optional} params An object to populate with path parameters and values\n   */\n  isMatch(path, params = {}) {\n    const pathItems = tokenizePath(path)\n    if (this.parts.length !== pathItems.length) return false\n\n    for (let i = 0; i < pathItems.length; i++) {\n      const part = this.parts[i]\n      const item = pathItems[i]\n      if (! isPartMatch(part, item)) return false\n\n      if (part.type === 'param') {\n        params[part.value] = item\n      }\n    }\n    return true\n  }\n}\n\n/** Return an array of objects {type: 'param|regex|string', value: 'Value of part'} */\nfunction parsePath(path) {\n  return tokenizePath(path).map(p => parsePart(p))\n}\n\nfunction tokenizePath(path) {\n  return cleanPath(path).split('/').map(p => p.trim()).filter(p => p.length > 0)\n}\n\nfunction parsePart(part) {\n  if (part.startsWith(':')) {\n    return {type: 'param', value: part.substring(1)}\n  }\n\n  if (part.startsWith('[') && part.endsWith(']')) {\n    const value = part.substring(1, part.length - 1)\n    return {type: 'regex', value: new RegExp(value)}\n  }\n  return {type: 'string', value: part}\n}\n\nfunction isPartMatch(part, s) {\n  if (part.type === 'param') return true\n  if (part.type === 'string') return s === part.value\n  if (part.type === 'regex') return part.value.test(s)\n  return false\n}\n"],
  "mappings": "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",
  "names": ["__defProp", "__export"]
}
